<?xml version="1.0" encoding="UTF-8" ?>

<!-- Emit AppSync CloudFormation RDS datasource and resolvers in YAML format. -->


<xsl:stylesheet
  version="1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

<xsl:output
  method="text"
  version="1.0"
  encoding="UTF-8"/>


<!-- Input values -->
<xsl:param name="database-name" select="AuroraClusterDatabaseName"/>
<xsl:param name="data-source-name"/>



<xsl:template match="/sql">
<xsl:text/># CloudFormation stack for AppSync datasource resolver generated by xplain2sql and graphql.xsl.
#
# DO NOT EDIT
#
AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  AppSyncApiId:
    Type: String
    Description: The id of the AppSync API associated with this project.
  env:
    Type: String
    Description: The environment name. e.g. Dev, Test, or Production
    Default: NONE
  S3DeploymentBucket:
    Type: String
    Description: The S3 bucket containing all deployment assets for the project.
  S3DeploymentRootKey:
    Type: String
    Description: An S3 key relative to the S3DeploymentBucket that points to the root
      of the deployment directory.
  <xsl:value-of select="$database-name"/>:
    Type: String
    Description: The name of the database within the RDS cluster to use.
  AuroraClusterArn:
    Type: String
    Description: The ARN of the database cluster
  AuroraClusterRootSecretArn:
    Type: String
    Description: The ARN for the Secret containing the access for the RDS cluster.


Resources:
  RelationalDatabaseDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Type: RELATIONAL_DATABASE
      Name: <xsl:value-of select="$data-source-name"/>
      Description: RDS Data Source Provisioned for <xsl:value-of select="$database-name"/>
      ApiId: !Ref AppSyncApiId
      ServiceRoleArn: !GetAtt RelationalDatabaseAccessRole.Arn
      RelationalDatabaseConfig:
        RelationalDatabaseSourceType: RDS_HTTP_ENDPOINT
        RdsHttpEndpointConfig:
          AwsRegion: !Ref AWS::Region
          DbClusterIdentifier: !Ref AuroraClusterArn
          DatabaseName: !Ref <xsl:value-of select="$database-name"/>
          AwsSecretStoreArn: !Ref AuroraClusterRootSecretArn
  RelationalDatabaseAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join
        - '-'
        - - role
          - <xsl:value-of select="$data-source-name"/>
          - !Ref AppSyncApiId
          - !Ref env
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: RelationalDatabaseAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - rds-data:ExecuteSql
                  - rds-data:ExecuteStatement
                  - rds-data:DeleteItems
                  - rds-data:GetItems
                  - rds-data:InsertItems
                  - rds-data:UpdateItems
                Resource: !Ref AuroraClusterArn
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Ref AuroraClusterRootSecretArn

<xsl:apply-templates select="storedProcedure" mode="resolver"/>
</xsl:template>



<!-- Emit an AWS::AppSync::Resolver -->

<xsl:template match="storedProcedure" mode="resolver">
  <xsl:text>
  </xsl:text><xsl:value-of select="@identifier"/>Resolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref AppSyncApiId
      DataSourceName: !GetAtt RelationalDatabaseDataSource.Name
      TypeName: <xsl:apply-templates select="." mode="type"/>
      FieldName: <xsl:value-of select="@identifier"/>
      RequestMappingTemplateS3Location: !Sub
        - s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}
        - S3DeploymentBucket: !Ref S3DeploymentBucket
          S3DeploymentRootKey: !Ref S3DeploymentRootKey
          ResolverFileName: "<xsl:apply-templates select="." mode="type"/>.<xsl:value-of select="@identifier"/>.req.vtl"
      ResponseMappingTemplateS3Location: !Sub
        - s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}
        - S3DeploymentBucket: !Ref S3DeploymentBucket
          S3DeploymentRootKey: !Ref S3DeploymentRootKey
          ResolverFileName: "<xsl:apply-templates select="." mode="type"/>.<xsl:value-of select="@identifier"/>.res.vtl"
</xsl:template>


<xsl:template match="storedProcedure" mode="type">
  <xsl:choose>
    <xsl:when test="insert | update | delete">
      <xsl:text>Mutation</xsl:text>
    </xsl:when>
    <xsl:otherwise>
      <xsl:text>Query</xsl:text>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>


</xsl:stylesheet>
