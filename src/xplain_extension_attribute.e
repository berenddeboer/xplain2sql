indexing

	description: "Xplain attribute which is an extension"

	author:     "Berend de Boer <berend@pobox.com>"
	copyright:  "Copyright (c) 1999, Berend de Boer"
	date:       "$Date: "
	revision:   "$Revision: "


class

	XPLAIN_EXTENSION_ATTRIBUTE

inherit

	XPLAIN_ATTRIBUTE
		rename
			make as inherited_make
			-- , abstracttype as extension
		redefine
			-- extension,
			is_extension,
			is_logical_extension,
			write_drop
		end

create

	make

feature {NONE} -- Initialization

	make (an_extension: XPLAIN_EXTENSION) is
		require
			valid_extension: an_extension /= Void
		do
			inherited_make (Void, an_extension, False, True, False, False)
		end


feature -- Status

	is_extension: BOOLEAN is True
			-- Is column generated by an extend statement?

	is_logical_extension: BOOLEAN is
			-- Is this an extension that is generated by a logical
			-- expression or a nil/any function?
			-- If so, join optimisations can be enabled.
		do
			Result := extension.no_update_optimization and then extension.expression.is_logical_expression and then not extension.expression.is_nil_expression
		end


feature -- Access

	extension: XPLAIN_EXTENSION is
		do
			Result ?= abstracttype
		ensure
			extension_not_void: Result /= Void
		end

	-- I should be able to rename abstracttype to extension and define this:
	--extension: XPLAIN_EXTENSION
	-- But SE doesn't allow that


feature {XPLAIN_TYPE} -- Xplain type controlled SQL code generation

	write_drop (sqlgenerator: SQL_GENERATOR; a_type: XPLAIN_TYPE) is
		do
			sqlgenerator.write_drop_extension (extension)
		end

end
